name: "Deploy Infrastructure and Website"

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write # Required for OIDC authentication
  contents: read

env:
  TF_VERSION: "1.9.6"

jobs:
  terraform:
    name: "Deploy Infrastructure"
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./infrastructure

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true

    outputs:
      swa_api_token: ${{ steps.terraform_output.outputs.swa_api_token }}
      swa_url: ${{ steps.terraform_output.outputs.swa_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false # Required to capture outputs

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        continue-on-error: false

      - name: Terraform Init
        run: terraform init

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: TFLint
        run: |
          tflint --init
          tflint --format compact

      - name: Terraform Plan
        run: terraform plan -no-color -input=false -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Get Terraform Outputs
        id: terraform_output
        run: |
          echo "swa_api_token=$(terraform output -raw static_web_app_api_key)" >> $GITHUB_OUTPUT
          echo "swa_url=$(terraform output -raw static_web_app_url)" >> $GITHUB_OUTPUT

  deploy_website:
    name: "Deploy Website"
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ needs.terraform.outputs.swa_api_token }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/"
          api_location: ""
          output_location: ""
          skip_app_build: true
        env:
          NPM_CONFIG_AUDIT: false
          NPM_CONFIG_FUND: false
          NPM_CONFIG_UPDATE_NOTIFIER: false

      - name: Deployment Complete
        run: |
          echo "::notice title=Deployment Complete::Website deployed to ${{ needs.terraform.outputs.swa_url }}"
          echo "ðŸš€ Website URL: ${{ needs.terraform.outputs.swa_url }}"
